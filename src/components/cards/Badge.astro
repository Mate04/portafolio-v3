---
import { cva, type VariantProps } from "class-variance-authority";
import { cn } from "../../lib/utils";

const badgeVariants = cva(
  "inline-flex items-center rounded-full px-3 py-1 text-xs font-semibold transition-none", // más padding y sin transición
  {
    variants: {
      variant: {
        default: "border-transparent bg-primary text-primary-foreground hover:bg-primary/80",
        secondary: "border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80",
        destructive: "border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80",
        // ESTE es el importante:
        outline: "bg-gray-100 text-gray-800  bg-white text-black bg-gray-100 text-gray-800",
      },
    },
    defaultVariants: {
      variant: "default",
    },
  }
);

interface BadgeProps extends VariantProps<typeof badgeVariants> {
  class?: string;
  [key: string]: any;
}

const { variant = "default", class: className = "", ...rest } = Astro.props as BadgeProps;
const classes = cn(badgeVariants({ variant }), className);
---

<div class={classes} {...rest}>
  <slot />
</div>
